{
  "items": [
    {
      "tags": ["react-native", "expo", "typeorm"],
      "is_answered": false,
      "view_count": 7,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685558085,
      "creation_date": 1685557713,
      "question_id": 76376373,
      "body_markdown": "I have a React Native + Expo project with SQLite database and TypeORM set up. I&#39;m trying to run a migration which should add an **isPrivate** column to an existing **Note** table on application start, by setting **migrationsRun** data source config option to **true**. But it doesn&#39;t work. It seems like TypeORM can&#39;t see migrations at all, even though the path is correct. \r\n\r\nIf Note entity has isPrivate column defined and I&#39;m trying to use a **find** method from repository instance, a following error gets thrown:\r\n\r\n```\r\nno such column: Note.isPrivate (code 1 SQLITE_ERROR): , while compiling: SELECT &quot;Note&quot;.&quot;id&quot; AS &quot;Note_id&quot;, &quot;Note&quot;.&quot;title&quot; AS &quot;Note_title&quot;, &quot;Note&quot;.&quot;details&quot; AS &quot;Note_details&quot;, &quot;Note&quot;.&quot;isPrivate&quot; AS &quot;Note_isPrivate&quot;, &quot;Note&quot;.&quot;folderId&quot; AS &quot;Note_folderId&quot; FROM &quot;note&quot; &quot;Note&quot;\r\n```\r\nHere is **data-source.ts** file:\r\n\r\n```\r\nimport &quot;reflect-metadata&quot;;\r\nimport { DataSource } from &quot;typeorm&quot;;\r\nimport * as sqlitedriver from &#39;expo-sqlite&#39;;\r\nimport Folder from &#39;./entities/Folder.model.ts&#39;;\r\nimport Note from &#39;./entities/Note.model.ts&#39;;\r\n\r\nconst AppDataSource = new DataSource({\r\n    driver: sqlitedriver,\r\n    database: &#39;app_db&#39;,\r\n    type: &#39;expo&#39;,\r\n    migrationsRun: true,\r\n    entities: [Folder, Note],\r\n    migrations: [&#39;migrations/*.ts&#39;],\r\n});\r\n\r\nAppDataSource.initialize().then(() =&gt; {\r\n    console.log(&quot;Data Source has been initialized!&quot;);\r\n}).catch((err) =&gt; {\r\n    console.error(&quot;Error during Data Source initialization&quot;, err.message);\r\n});\r\n\r\nexport default AppDataSource;\r\n```\r\n**migration** file:\r\n\r\n```\r\nimport { MigrationInterface, QueryRunner } from &quot;typeorm&quot;;\r\nimport { TableColumn } from &quot;typeorm&quot;;\r\n\r\nexport class AddIsPrivateColumn1684782594104 implements MigrationInterface {\r\n    public async up(queryRunner: QueryRunner): Promise&lt;void&gt; {\r\n        await queryRunner.addColumn(\r\n            &quot;Note&quot;,\r\n            new TableColumn({\r\n                name: &quot;isPrivate&quot;,\r\n                type: &quot;boolean&quot;,\r\n            }),\r\n        );\r\n    };\r\n\r\n    public async down(queryRunner: QueryRunner): Promise&lt;void&gt; {\r\n        await queryRunner.dropColumn(&quot;Note&quot;, &quot;isPrivate&quot;);\r\n    };\r\n};\r\n```\r\nHow do I run a migration? Is something wrong with the data source configuration? ",
      "link": "https://stackoverflow.com/questions/76376373/cant-run-migrations-with-migrationsrun-true",
      "title": "Can&#39;t run migrations with migrationsRun: true"
    },
    {
      "tags": [
        "react-native",
        "orientation",
        "landscape",
        "device-orientation",
        "flatlist"
      ],
      "is_answered": true,
      "view_count": 66,
      "up_vote_count": 1,
      "answer_count": 2,
      "score": 1,
      "last_activity_date": 1685557646,
      "creation_date": 1683266528,
      "question_id": 76179222,
      "body_markdown": "So I am creating flatlist of images. Which shows only one image at a time on the screen.\r\nNow if I rotate the device then the image which is in the landscape should be shown in full screen in landscape mode of the device.\r\n\r\nI can not attach the code because it is too large. If anyone can give an example of this it will be great.\r\n\r\nJust imagine this my rendetitem view of flatlist, here in place of text I have an image and it should be seen in landscape mode as device orientation change to landscape.\r\n\r\nIt should not affect the pagination of flatlist when device orientation comes again in portrait.\r\n\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/C3DWd.jpg",
      "link": "https://stackoverflow.com/questions/76179222/react-native-flatlist-item-layout-should-adapt-device-orientation-change",
      "title": "React-native flatlist item layout should adapt device orientation change"
    },
    {
      "tags": ["javascript", "css", "reactjs", "list", "react-native"],
      "is_answered": true,
      "view_count": 22,
      "up_vote_count": 1,
      "answer_count": 3,
      "score": 1,
      "last_activity_date": 1685557509,
      "creation_date": 1685552370,
      "question_id": 76375804,
      "body_markdown": "Making the active toggle on\r\n\r\nI am currently working with React and I made a list where they will have active states and I already made the `onClick` functions but it won&#39;t work. If I try to click and expect the toggle all I get is just flash of the background color I expect the div to get when it&#39;s active.\r\n\r\n```javascript\r\nimport React, { useState } from &#39;react&#39;;\r\nimport &#39;./Home.css&#39;;\r\n\r\nfunction Home() {\r\n  const [isActive, setIsActive] = useState({\r\n    oneStar: true,\r\n    twoStars: false,\r\n    threeStars: false,\r\n    fourStars: false,\r\n    fiveStars: false,\r\n  });\r\n\r\n  return (\r\n    &lt;div className=&#39;app_card_container&#39;&gt;\r\n      &lt;div className=&#39;app_card_body&#39;&gt;\r\n        &lt;div className=&#39;app_card_list&#39;&gt;\r\n          &lt;div\r\n            className={isActive.oneStar\r\n              ? &#39;app_card_lists active&#39;\r\n              : &#39;app_card_lists&#39;\r\n            }\r\n            onClick={() =&gt;\r\n              setIsActive({\r\n                oneStar: true,\r\n                twoStars: false,\r\n                threeStars: false,\r\n                fourStars: false,\r\n                fiveStars: false,\r\n              })\r\n            }\r\n          &gt;\r\n            1\r\n          &lt;/div&gt;\r\n          &lt;div\r\n            className={isActive.twoStars\r\n              ? &#39;app_card_lists active&#39;\r\n              : &#39;app_card_lists&#39;\r\n            }\r\n            onClick={() =&gt;\r\n              setIsActive({\r\n                oneStar: false,\r\n                twoStars: true,\r\n                threeStars: false,\r\n                fourStars: false,\r\n                fiveStars: false,\r\n              })\r\n            }\r\n          &gt;\r\n            2\r\n          &lt;/div&gt;\r\n          &lt;div\r\n            className={isActive.threeStars\r\n              ? &#39;app_card_lists active&#39;\r\n              : &#39;app_card_lists&#39;\r\n            }\r\n            onClick={() =&gt;\r\n              setIsActive({\r\n                oneStar: false,\r\n                twoStars: false,\r\n                threeStars: true,\r\n                fourStars: false,\r\n                fiveStars: false,\r\n              })\r\n            }\r\n          &gt;\r\n            3\r\n          &lt;/div&gt;\r\n          &lt;div\r\n            className={isActive.fourStars\r\n              ? &#39;app_card_lists active&#39;\r\n              : &#39;app_card_lists&#39;\r\n            }\r\n            onClick={() =&gt;\r\n              setIsActive({\r\n                oneStar: false,\r\n                twoStars: false,\r\n                threeStars: false,\r\n                fourStars: true,\r\n                fiveStars: false,\r\n              })\r\n            }\r\n          &gt;\r\n            4\r\n          &lt;/div&gt;\r\n          &lt;div\r\n            className={isActive.fiveStars\r\n              ? &#39;app_card_lists active&#39;\r\n              : &#39;app_card_lists&#39;\r\n            }\r\n            onClick={() =&gt;\r\n              setIsActive({\r\n                oneStar: false,\r\n                twoStars: false,\r\n                threeStars: false,\r\n                fourStars: false,\r\n                fiveStars: true,\r\n              })\r\n            }\r\n          &gt;\r\n            5\r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  );\r\n}\r\n\r\nexport default Home;\r\n```\r\n\r\nand here is my CSS for the div involved in the subject:\r\n\r\n```css\r\n.app_card_list {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.app_card_lists {\r\n  margin-left: 1.5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: hsl(216, 12%, 8%);\r\n  text-align: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  color: hsl(0, 0%, 100%);\r\n}\r\n\r\n.app_card_lists:hover {\r\n  background-color: hsl(217, 12%, 63%);\r\n}\r\n\r\n.app_card_lists:active {\r\n  background-color: red;\r\n}\r\n```",
      "link": "https://stackoverflow.com/questions/76375804/react-list-onclick-function-isnt-triggering-active-toggle-how-to-troubleshoot",
      "title": "React list onClick function isn&#39;t triggering active toggle, how to troubleshoot?"
    },
    {
      "tags": ["node.js", "react-native", "permissions"],
      "is_answered": true,
      "view_count": 4676,
      "up_vote_count": 2,
      "answer_count": 2,
      "score": 2,
      "last_activity_date": 1685557098,
      "creation_date": 1636538643,
      "question_id": 69911237,
      "body_markdown": "permission denied issue in mac while installing react-native-cli\r\nThe operation was rejected by your operating system.It is likely you do not have the permissions to access this file as the current user\r\n\r\n    npm install -g react-native-cli\r\n    npm ERR! code EACCES\r\n    npm ERR! syscall mkdir\r\n    npm ERR! path /usr/local/lib/node_modules/react-native-cli\r\n    npm ERR! errno -13\r\n    npm ERR! Error: EACCES: permission denied, mkdir \r\n    &#39;/usr/local/lib/node_modules/react-native-cli&#39;\r\n    npm ERR!  [Error: EACCES: permission denied, mkdir \r\n    &#39;/usr/local/lib/node_modules/react-native-cli&#39;] {\r\n    npm ERR!   errno: -13,\r\n    npm ERR!   code: &#39;EACCES&#39;,\r\n    npm ERR!   syscall: &#39;mkdir&#39;,\r\n    npm ERR!   path: &#39;/usr/local/lib/node_modules/react-native-cli&#39;\r\n    npm ERR! }\r\n    npm ERR! If you believe this might be a permissions issue, please double-check the\r\n    npm ERR! permissions of the file and its containing directories, or try running\r\n    npm ERR! the command again as root/Administrator.\r\n    npm ERR! A complete log of this run can be found in:\r\n    npm ERR!     /Users/intersoft-admin/.npm/_logs/2021-11-10T09_56_34_035Z-debug.log\r\n\r\n",
      "link": "https://stackoverflow.com/questions/69911237/eacces-permission-denied-mkdir-usr-local-lib-node-modules-react-native-cli",
      "title": "EACCES: permission denied, mkdir &#39;/usr/local/lib/node_modules/react-native-cli&#39;"
    },
    {
      "tags": [
        "javascript",
        "react-native",
        "firebase-realtime-database",
        "react-hooks"
      ],
      "is_answered": false,
      "view_count": 25,
      "up_vote_count": 0,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1685556886,
      "creation_date": 1685069176,
      "question_id": 76337347,
      "body_markdown": "I have a ```Host.js``` file which has a track list which is updated as defined by the setTrackListener() function. My issue is that everytime the function is called, the trackList isn&#39;t actually updated. Here is an example print out:\r\n\r\n```\r\nChange detected in setTrackListener\r\n LOG  Track Name: TEST\r\n LOG  Current trackList:\r\n LOG  NewArray: TEST\r\n LOG  trackList after set:\r\n```\r\n\r\nHere is my code:\r\n```\r\nlet authToken = &quot;&quot;;\r\nlet roomID = &quot;&quot;;\r\n\r\nexport default function Host({ navigation }) {\r\n  if (roomID == &quot;&quot;) {\r\n    roomID = createRoom();\r\n  }\r\n  const [trackList, setTrackList] = useState([]);\r\n\r\n  if (authToken == &quot;&quot;) {\r\n    getAuthAccessToken().then((t) =&gt; (authToken = t));\r\n  }\r\n\r\n  useEffect(() =&gt; {\r\n    setTrackListener(roomID, (t) =&gt; {\r\n      if (t != null) {\r\n        console.log(&quot;Track Name: &quot; + t.name);\r\n        console.log(&quot;Current trackList: &quot; + trackList);\r\n        const newArray = [...trackList];\r\n        newArray.push(t.name);\r\n        console.log(&quot;NewArray: &quot; + newArray);\r\n        setTrackList(newArray);\r\n        console.log(&quot;trackList after set: &quot; + trackList);\r\n      }\r\n    });\r\n \r\n  }, []);\r\n\r\n  return (\r\n    &lt;View style={styles.container}&gt;\r\n      &lt;Text style={styles.title}&gt;Hosting {roomID}&lt;/Text&gt;\r\n      &lt;FlatList\r\n        data={trackList}\r\n        renderItem={({ item }) =&gt; &lt;Text style={styles.item}&gt;{item}&lt;/Text&gt;}\r\n      /&gt;\r\n    &lt;/View&gt;\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: &quot;#fff&quot;,\r\n    alignItems: &quot;center&quot;,\r\n    justifyContent: &quot;center&quot;,\r\n  },\r\n  title: {\r\n    color: &quot;#590&quot;,\r\n    fontSize: 32,\r\n  },\r\n});\r\n\r\n```\r\n```setTrackListener``` is defined in a seperate file, where I listen to changes on a specific Google Firebase Database. Here is that code:\r\n\r\n```\r\nlet setTrackListener = (id, onChange) =&gt; {\r\n  let tracksRef = ref(database, `rooms/${id}/tracks`);\r\n  onChildAdded(tracksRef, (snapshot) =&gt; {\r\n    const data = snapshot.val();\r\n    console.log(&quot;Change detected in setTrackListener&quot;);\r\n    onChange(data);\r\n  });\r\n};\r\n```\r\nIf I instead update the trackList with button like the following, it does update:\r\n```\r\n&lt;Button\r\n  title={&quot;Test&quot;}\r\n  onPress={() =&gt; {\r\n  const newArray = [...trackList, &quot;TEST&quot;];\r\n  setTrackList(newArray);\r\n  console.log(trackList);\r\n}}\r\n&gt;&lt;/Button&gt;\r\n```",
      "link": "https://stackoverflow.com/questions/76337347/update-list-on-page-without-resetting-state-in-react-native",
      "title": "Update list on page without resetting state in React Native"
    },
    {
      "tags": [
        "reactjs",
        "react-native",
        "ipad",
        "deep-linking",
        "microstrategy"
      ],
      "is_answered": false,
      "view_count": 5,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685556717,
      "creation_date": 1685556717,
      "question_id": 76376271,
      "body_markdown": "I have developed a MicroStrategy widget using a React-based framework, and it works flawlessly on various platforms. However, I encountered an issue when attempting to call the URL scheme in the MicroStrategy iPad app. Specifically, the app fails to open a specific MicroStrategy document. To address this problem, I decided to explore deep linking or the linking feature of React Native.\r\n\r\nIn my efforts to integrate the React Native component into the React JS MicroStrategy plugin, I encountered an error while generating the build. The error message reads as follows:\r\n\r\n    ERROR in ./node_modules/react-native/index.js 14:7\r\n    Module parse failed: Unexpected token (14:7)\r\n    You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\r\n    | \r\n    | // Components\r\n    &gt; import typeof AccessibilityInfo from &#39;./Libraries/Components/AccessibilityInfo/AccessibilityInfo&#39;;\r\n    | import typeof ActivityIndicator from &#39;./Libraries/Components/ActivityIndicator/ActivityIndicator&#39;;\r\n    | import typeof Button from &#39;./Libraries/Components/Button&#39;;\r\n     @ ./src/components/saveAll.js 22:0-45 119:21-39 127:21-36 161:21-39 169:21-36\r\n     @ ./src/App.js 24:0-43 201:40-47\r\n     @ ./src/ImporExcelMobile.js 10:0-24 79:56-59\r\n\r\n\r\nI would greatly appreciate any guidance or assistance in resolving this error.\r\nThank you for your support and expertise in advance\r\n",
      "link": "https://stackoverflow.com/questions/76376271/unexpected-token-react-native-index-js-typeof-error-when-integrating-react-na",
      "title": "Unexpected token. react-native/index.js &quot;typeof&quot; Error when integrating React Native Component for Deep Linking in React JS based MicroStrategy widget"
    },
    {
      "tags": ["javascript", "react-native", "voximplant"],
      "is_answered": false,
      "view_count": 31,
      "up_vote_count": 1,
      "answer_count": 1,
      "score": 1,
      "last_activity_date": 1685556184,
      "creation_date": 1685517980,
      "question_id": 76371074,
      "body_markdown": "I am trying to implement voximplant for voice calls into a chat rn app, Can anyone please help me do implement a simple version of it? I saw the Voximplant rn demo repos but I couldn&#39;t find a very simple straight forward example for voice calls,\r\n\r\nhowever, currently, I created 3 screen Login, Calling, and IncomingCalling in the login screen I implemented a simple login function that login users I created in my Voixmplant control panel, and I can now login into one user that I created and navigate to call screen,\r\n\r\nCan anyone please help me how to make a real voice call within the app? like I don&#39;t want to create a separate screen for user address book/contacts but instead, I directly want to call a user with username &quot;testuser2&quot; when any user logged in How can I implement this? \r\nThe calling screen and incoming calling screen is a very simple UI it just have a few buttons \r\n\r\nLogin:\r\n\r\n    const LoginScreen = () =&gt; {\r\n        const navigation = useNavigation();\r\n        const voximplant = Voximplant.getInstance();\r\n        const [user, setUser] = useState(&#39;&#39;);\r\n        const [password, setPassword] = useState(&#39;&#39;);\r\n    \r\n        async function login() {\r\n            try {\r\n                let clientState = await voximplant.getClientState();\r\n                if (clientState === Voximplant.ClientState.DISCONNECTED) {\r\n                    await voximplant.connect();\r\n                    await voximplant.login(\r\n                        `${user}@${VOXIMPLANT_APP}.${VOXIMPLANT_ACCOUNT}.voximplant.com`,\r\n                        password,\r\n                    );\r\n                }\r\n                if (clientState === Voximplant.ClientState.CONNECTED) {\r\n                    await voximplant.login(\r\n                        `${user}@${VOXIMPLANT_APP}.${VOXIMPLANT_ACCOUNT}.voximplant.com`,\r\n                        password,\r\n                    );\r\n                }\r\n                navigation.navigate(&#39;callscreen&#39;);\r\n            } catch (e) {\r\n                let message;\r\n                switch (e.name) {\r\n                    case Voximplant.ClientEvents.ConnectionFailed:\r\n                        message = &#39;Connection error, check your internet connection&#39;;\r\n                        break;\r\n                    case Voximplant.ClientEvents.AuthResult:\r\n                        message = convertCodeMessage(e.code);\r\n                        break;\r\n                    default:\r\n                        message = &#39;Unknown error. Try again&#39;;\r\n                }\r\n                showLoginError(message);\r\n            }\r\n        }\r\n    \r\n        function convertCodeMessage(code) {\r\n            switch (code) {\r\n                case 401:\r\n                    return &#39;Invalid password&#39;;\r\n                case 404:\r\n                    return &#39;Invalid user&#39;;\r\n                case 491:\r\n                    return &#39;Invalid state&#39;;\r\n                default:\r\n                    return &#39;Try again later&#39;;\r\n            }\r\n        }\r\n    \r\n        function showLoginError(message) {\r\n            Alert.alert(&#39;Login error&#39;, message, [\r\n                {\r\n                    text: &#39;OK&#39;,\r\n                },\r\n            ]);\r\n        }\r\n    \r\n        return (\r\n            &lt;&gt;\r\n                &lt;StatusBar barStyle=&quot;dark-content&quot; /&gt;\r\n                &lt;SafeAreaView style={styles.safearea}&gt;\r\n                    &lt;View style={[styles.container]}&gt;\r\n                        &lt;TextInput\r\n                            underlineColorAndroid=&quot;transparent&quot;\r\n                            style={styles.forminput}\r\n                            placeholder=&quot;User name&quot;\r\n                            autoFocus={true}\r\n                            returnKeyType={&#39;next&#39;}\r\n                            autoCapitalize=&quot;none&quot;\r\n                            autoCorrect={false}\r\n                            blurOnSubmit={false}\r\n                            onChangeText={(text) =&gt; setUser(text)}\r\n                        /&gt;\r\n                        &lt;TextInput\r\n                            underlineColorAndroid=&quot;transparent&quot;\r\n                            style={styles.forminput}\r\n                            placeholder=&quot;User password&quot;\r\n                            secureTextEntry={true}\r\n                            onChangeText={(text) =&gt; setPassword(text)}\r\n                            blurOnSubmit={true}\r\n                        /&gt;\r\n                        &lt;TouchableOpacity onPress={() =&gt; login()} style={styles.button}&gt;\r\n                            &lt;Text style={styles.textButton}&gt;LOGIN&lt;/Text&gt;\r\n                        &lt;/TouchableOpacity&gt;\r\n                    &lt;/View&gt;\r\n                &lt;/SafeAreaView&gt;\r\n            &lt;/&gt;\r\n        );\r\n    };",
      "link": "https://stackoverflow.com/questions/76371074/how-to-use-voximplant-to-do-voice-calling-in-react-native",
      "title": "How to use Voximplant to do voice calling in react native?"
    },
    {
      "tags": [
        "reactjs",
        "react-native",
        "react-navigation",
        "react-navigation-v5"
      ],
      "is_answered": false,
      "view_count": 26,
      "up_vote_count": 0,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1685556173,
      "creation_date": 1685529177,
      "question_id": 76372556,
      "body_markdown": "I have multiple stacks inside my application and I am trying to navigate user from one stack to another stack&#39;s child screen.\r\n\r\n```\r\nNavigation Container\r\n--Drawer.Navigator\r\n\r\n---Drawer.Screen.DashboardStack\r\n----Stack.Navigator\r\n-----Stack.Navigator.Screen.Dashboard\r\n\r\n---Drawer.Screen.TaskSubmissionStack\r\n----Stack.Navigator\r\n-----Stack.Navigator.Screen.TaskSubmissionScreen\r\n\r\n---Drawer.Screen.FieldManagement\r\n----Stack.Navigator\r\n-----Stack.Navigator.Screen.FieldListing\r\n-----Stack.Navigator.Screen.FieldDetail\r\n```\r\n\r\nI have my TaskSubmissionScreen stack defined like this in Drawer.Navigator\r\n\r\n```\r\n&lt;Drawer.Screen\r\n  name={AppRoutes.TaskSubmissionScreen}\r\n  component={taskSubmissionStack}\r\n  initialParams={{\r\n    source: Assets.taskHistoryIcon,\r\n    title: LocalizationConstants.LABEL_TASK_HISTORY(),\r\n  }}\r\n  options={{\r\n    unmountOnBlur: true,\r\n  }}\r\n/&gt;\r\n```\r\n\r\nI am navigating to TaskHistory from FieldDetail like this:\r\n\r\n```\r\nnavigateToTaskHistory = (field) =&gt; {\r\n\tthis.props.navigation.navigate(AppRoutes.TaskSubmissionScreen, {\r\n\t  screen: AppRoutes.TaskSubmissionScreen,\r\n\t  params: {\r\n\t    filterObject: {\r\n\t      fieldIds: [field.id],\r\n\t    },\r\n\t  },\r\n\t});\r\n};\r\n```\r\n\r\nInside the TaskSubmission screen under task submission stack I am reading params like this:\r\n\r\n```\r\n// component did mount\r\nif (this.props?.route?.params?.filterObject) {\r\n\t\r\n\tconst filterObject = {\r\n\t  ...this.state.filterObject,\r\n\t  ...this.props?.route?.params?.filterObject,\r\n\t};\r\n\r\n\tconst searchTerm = &#39;&#39;;\r\n\tthis.setState({ filterObject, searchTerm }, () =&gt; this.getData());\r\n\r\n\t// Reset params\r\n\tthis.props.navigation.setParams({ filterObject: null });\r\n\t\r\n}\r\n```\r\n\r\n**Now in the app, If I go to task history, from task detail, it works fine and params which I pass works correctly, but If I go to dashboard from task history then navigate back to task history using the drawer I get the same params back even though in the above code I am resetting the params after reading them**.\r\n\r\nMy custom drawer navigate code:\r\n\r\n```\r\nthis.props.navigation.navigate(routeName);\r\n```\r\n\r\nI am using react-navigation versions:\r\n\r\n    &quot;@react-navigation/compat&quot;: &quot;^5.1.14&quot;,\r\n    &quot;@react-navigation/drawer&quot;: &quot;^5.3.2&quot;,\r\n    &quot;@react-navigation/native&quot;: &quot;^5.0.7&quot;,\r\n    &quot;@react-navigation/stack&quot;: &quot;^5.0.9&quot;,",
      "link": "https://stackoverflow.com/questions/76372556/react-navigation-route-params-not-resetting",
      "title": "React Navigation route params not resetting"
    },
    {
      "tags": ["react-native", "search"],
      "is_answered": false,
      "view_count": 10,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685554927,
      "creation_date": 1685554557,
      "question_id": 76376032,
      "body_markdown": "The page I designed is like the search part of Instagram. when first opened it shows past searches and then the results of new searches as they are searched.Displaying past results is working. When the search is done, I can get the response, but the screen does not update and the search history still remains on the page. these are my codes, my APIs are ok and my searchModal is ok can you help me\r\n\r\n\r\n```\r\nimport React, { useState, useEffect } from &#39;react&#39;;\r\nimport { getSearchHistory, search, deleteSearch } from &#39;../api/searchApi&#39;;\r\nimport { View, Text, StyleSheet, SafeAreaView, TextInput, TouchableWithoutFeedback, TouchableHighlight, FlatList } from &#39;react-native&#39;;\r\nimport Icon from &#39;react-native-vector-icons/Feather&#39;;\r\nimport { windowHeight } from &#39;../global&#39;;\r\nimport SearchModal from &#39;../components/searchModal&#39;;\r\n\r\nfunction SearchScreen({ }) {\r\n const [loading, setLoading] = useState(false);\r\n const [searchText, setSearchText] = useState(&#39;&#39;);\r\n const [searchResults, setSearchResults] = useState([]);\r\n const [searchHistory, setSearchHistory] = useState([]);\r\n const [refreshing, setRefreshing] = useState(false);\r\n\r\n useEffect(() =&gt; {\r\n  fetchSearchHistory();\r\n }, []);\r\n\r\n const handleDeleteSearch = (itemId) =&gt; {\r\n  deleteSearch(itemId)\r\n   .then((response) =&gt; {\r\n    if (response.status !== 200) {\r\n     alert(&#39;Hata var&#39;);\r\n    } else {\r\n     // Silinen &#246;ğeyi searchHistory dizisinden kaldır\r\n     setSearchHistory((prevSearchHistory) =&gt;\r\n      prevSearchHistory.filter((item) =&gt; item.id !== itemId)\r\n     );\r\n    }\r\n   })\r\n   .catch((error) =&gt; {\r\n    if (error.status !== 200) {\r\n     Alert.alert(&#39;Bir hata oluştu&#39;);\r\n    }\r\n   });\r\n };\r\n\r\n\r\n\r\n\r\n const handleSearch = async () =&gt; {\r\n  if (searchText) {\r\n   try {\r\n    setRefreshing(true); // Yenileme durumunu aktif hale getir\r\n    setSearchResults([]); // Arama sonu&#231;larını temizle\r\n    const results = await search(searchText);\r\n    setSearchResults(results);\r\n   } catch (error) {\r\n    console.log(error);\r\n   } finally {\r\n    setRefreshing(false); // Yenileme durumunu devre dışı bırak\r\n   }\r\n  }\r\n };\r\n\r\n const fetchSearchHistory = async () =&gt; {\r\n  try {\r\n   const history = await getSearchHistory();\r\n   setSearchHistory(history);\r\n  } catch (error) {\r\n   console.log(error);\r\n  }\r\n };\r\n\r\n useEffect(() =&gt; {\r\n  const timer = setTimeout(() =&gt; {\r\n   if (searchText.length &gt; 0) {\r\n    handleSearch();\r\n   } else {\r\n\r\n    setSearchResults([]);\r\n   }\r\n  }, 100);\r\n\r\n  return () =&gt; clearTimeout(timer);\r\n }, [searchText]);\r\n\r\n const renderSearchHistory = ({ item }) =&gt; {\r\n  return (\r\n   &lt;SearchModal\r\n    item={item}\r\n    onDeleteSearch={() =&gt; handleDeleteSearch(item.id)}\r\n   /&gt;\r\n  );\r\n };\r\n\r\n\r\n const renderSearchResult = ({ item }) =&gt; {\r\n  return (\r\n   &lt;SearchModal\r\n    item={item}\r\n    onDeleteSearch={() =&gt; handleDeleteSearch(item.id)}\r\n   /&gt;\r\n  );\r\n };\r\n\r\n return (\r\n  &lt;SafeAreaView style={styles.body}&gt;\r\n   &lt;View style={styles.container}&gt;\r\n    &lt;TextInput\r\n     style={styles.input}\r\n     placeholder=&quot;Arama yapın&quot;\r\n     placeholderTextColor=&quot;#999&quot;\r\n     value={searchText}\r\n     onChangeText={setSearchText}\r\n    /&gt;\r\n    &lt;Icon name=&quot;search&quot; size={20} color=&quot;#999&quot; style={styles.searchIcon} onPress={handleSearch} /&gt;\r\n   &lt;/View&gt;\r\n   &lt;Text style={styles.title}&gt;Aramalarınız:&lt;/Text&gt;\r\n\r\n   &lt;FlatList\r\n    data={searchResults.length &gt; 0 ? searchResults : searchHistory}\r\n    keyExtractor={(item) =&gt; item.id.toString()}\r\n    renderItem={searchResults.length &gt; 0 ? renderSearchResult : renderSearchHistory}\r\n    style={styles.searchResults}\r\n    refreshing={refreshing} // Yenileme durumunu belirt\r\n    onRefresh={handleSearch} // Yenileme işlevini tanımla\r\n   /&gt;\r\n  &lt;/SafeAreaView&gt;\r\n );\r\n}\r\n```\r\n",
      "link": "https://stackoverflow.com/questions/76376032/reactnative-search-page-screen-not-updating",
      "title": "Reactnative search page screen not updating"
    },
    {
      "tags": ["javascript", "python", "react-native", "pytorch"],
      "is_answered": false,
      "view_count": 56,
      "up_vote_count": 0,
      "answer_count": 2,
      "score": 0,
      "last_activity_date": 1685554195,
      "creation_date": 1683477744,
      "question_id": 76195130,
      "body_markdown": "While trying to make an object detection app in react native using torchvison models encountered the following error -\r\nerror -\r\n\r\n   \r\n\r\n    Possible Unhandled Promise Rejection (id: 1):\r\n    Object {\r\n      &quot;message&quot;: &quot;Format error\r\n    Exception raised from _load_for_mobile at /data/users/atalman/pytorch/torch/csrc/jit/mobile/import.cpp:623 (most recent call first):\r\n    (no backtrace available)&quot;,\r\n    }\r\n\r\nreinstalling pytorch did not solve the problem.\r\nfollowed documentation - &gt;  https://playtorch.dev/docs/tutorials/snacks/object-detection/\r\nfor version 0.2.4\r\n\r\ncode App.js - \r\n```\r\nimport {StyleSheet, Text, View} from &#39;react-native&#39;;\r\nimport React from &#39;react&#39;;\r\nimport {\r\n  Camera,\r\n  MobileModel,\r\n  torch,\r\n  torchvision,\r\n  media,\r\n} from &#39;react-native-pytorch-core&#39;;\r\nlet model = null;\r\nconst T = torchvision.transforms;\r\nconst App = () =&gt; {\r\n  async function handleImage(image) {\r\n    console.log(&#39;Image Taken!!&#39;);\r\n    const width = image.getWidth();\r\n    const height = image.getHeight();\r\n    // 3.ii. Convert image to blob, which is a byte representation of the image\r\n    // in the format height (H), width (W), and channels (C), or HWC for short\r\n    const blob = media.toBlob(image);\r\n    // 3.iii. Get a tensor from image the blob and also define in what format\r\n    // the image blob is.\r\n    let tensor = torch.fromBlob(blob, [height, width, 3]);\r\n    // 3.iv. Rearrange the tensor shape to be [CHW]\r\n    tensor = tensor.permute([2, 0, 1]);\r\n    // 3.v. Divide the tensor values by 255 to get values between [0, 1]\r\n    tensor = tensor.div(255);\r\n    // 3.vi. Crop the image in the center to be a squared image\r\n    const centerCrop = T.centerCrop(Math.min(width, height));\r\n    tensor = centerCrop(tensor);\r\n    // 3.vii. Resize the image tensor to 3 x 224 x 224\r\n    const resize = T.resize(224);\r\n    tensor = resize(tensor);\r\n    // 3.viii. Normalize the tensor image with mean and standard deviation\r\n    const normalize = T.normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]);\r\n    tensor = normalize(tensor);\r\n    // 3.ix. Unsqueeze adds 1 leading dimension to the tensor\r\n    tensor = tensor.unsqueeze(0);\r\n    // console.log(tensor);\r\n    // 3.x. Return the tensor shape [1, 3, 224, 224]\r\n    const result = tensor.shape;\r\n    console.log(&#39;result:&#39;, result);\r\n    if (model == null) {\r\n      console.log(&#39;Loading model...&#39;);\r\n      const filePath = await MobileModel.download(&#39;detr_resnet50.ptl&#39;);\r\n      model = await torch.jit._loadForMobile(filePath);\r\n      console.log(&#39;Model successfully loaded&#39;);\r\n    }\r\n    console.log(&#39;Forward propogation !!&#39;);\r\n    const output = await model.forward(tensor);\r\n    console.log(output);\r\n  }\r\n  return (\r\n    &lt;View style={styles.container}&gt;\r\n      &lt;Text style={styles.label}&gt;Class: &lt;/Text&gt;\r\n      &lt;Camera style={styles.camera} onCapture={handleImage} /&gt;\r\n    &lt;/View&gt;\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    backgroundColor: &#39;#ffff&#39;,\r\n    padding: 20,\r\n    alignItems: &#39;center&#39;,\r\n  },\r\n  label: {\r\n    marginBottom: 10,\r\n    color: &#39;black&#39;,\r\n    fontSize: 20,\r\n  },\r\n  camera: {\r\n    flexGrow: 1,\r\n    width: &#39;100%&#39;,\r\n    marginTop: 70,\r\n  },\r\n});\r\n```\r\nproject dependencies - \r\n\r\n      &quot;devDependencies&quot;: {\r\n        &quot;@babel/core&quot;: &quot;^7.12.9&quot;,\r\n        &quot;@babel/runtime&quot;: &quot;^7.12.5&quot;,\r\n        &quot;@react-native-community/eslint-config&quot;: &quot;^2.0.0&quot;,\r\n        &quot;babel-jest&quot;: &quot;^26.6.3&quot;,\r\n        &quot;eslint&quot;: &quot;^7.32.0&quot;,\r\n        &quot;jest&quot;: &quot;^26.6.3&quot;,\r\n        &quot;metro-react-native-babel-preset&quot;: &quot;0.72.3&quot;,\r\n        &quot;react-test-renderer&quot;: &quot;18.1.0&quot;\r\n      }\r\n\r\n",
      "link": "https://stackoverflow.com/questions/76195130/format-error-exception-raised-from-load-for-mobile-while-loading-a-pytorch-mode",
      "title": "Format error Exception raised from _load_for_mobile while loading a pytorch model in react native"
    },
    {
      "tags": ["javascript", "reactjs", "react-native"],
      "is_answered": true,
      "view_count": 3357,
      "up_vote_count": 1,
      "answer_count": 2,
      "score": 1,
      "last_activity_date": 1685553461,
      "creation_date": 1623227628,
      "question_id": 67900434,
      "body_markdown": "I am new to react native and trying to create some app in which I want to show or hide status bar  on different screens.In main screen I don&#39;t want to show status bar for that I have set its property `hidden={true}` but on doing  this its also not visible on other screens how can I make it visible on other screens.\r\n\r\nIn `Onboard` and `Home` and screen I want to show status bar and in `Login` and `Register` screen I don&#39;t wanna show status bar. \r\n\r\nBelow is my code:\r\n\r\n**App.js**\r\n\r\n    import React from &#39;react&#39;;\r\n    import {StatusBar} from &#39;react-native&#39;;\r\n    import { NavigationContainer } from &#39;@react-navigation/native&#39;;\r\n    import { createStackNavigator } from &#39;@react-navigation/stack&#39;;\r\n    import Onboard from &#39;./components/Onboard&#39;;\r\n    import Login from &#39;./components/Login&#39;;\r\n    import Register from &#39;./components/Register&#39;;\r\n    import Home from &#39;./components/Home&#39;;\r\n\r\n    const Stack = createStackNavigator();\r\n\r\n    const App = () =&gt; {\r\n\r\n    return (\r\n      &lt;NavigationContainer&gt;\r\n       &lt;StatusBar hidden={true}/&gt;\r\n        &lt;Stack.Navigator&gt;\r\n         &lt;Stack.Screen\r\n           name=&quot;Onboard&quot;\r\n           component={Onboard}\r\n           options={{ headerShown: false }} /&gt;\r\n        &lt;Stack.Screen\r\n          name=&quot;Login&quot;\r\n          component={Login}\r\n          options={{ headerShown: false }} /&gt;\r\n        &lt;Stack.Screen\r\n          name=&quot;Register&quot;\r\n          component={Register} /&gt;\r\n        &lt;Stack.Screen\r\n          name=&quot;Home&quot;\r\n          component={Home} \r\n          options={{ \r\n            headerLeft: null,\r\n            headerTintColor:&#39;white&#39;,\r\n            headerStyle: {\r\n              backgroundColor: &#39;#e57373&#39;,\r\n              elevation:0,\r\n              shadowOpacity:0\r\n           } }}/&gt;  \r\n        &lt;/Stack.Navigator&gt;\r\n      &lt;/NavigationContainer&gt;\r\n      );\r\n    };\r\n\r\n    export default App;\r\n\r\nSomeone let me know how can I achieve desired results.\r\n\r\n \r\n ",
      "link": "https://stackoverflow.com/questions/67900434/how-to-show-or-hide-status-bar-on-different-screens-in-react-native",
      "title": "How to show or hide status bar on different screens in React Native"
    },
    {
      "tags": ["android", "react-native", "mobile", "expo"],
      "is_answered": false,
      "view_count": 10,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685553261,
      "creation_date": 1685553261,
      "question_id": 76375896,
      "body_markdown": "I have completed my Expo project and obtained the output for Android. When I install the output I received as an APK on my phone, I encounter this error.\r\n\r\nSince I checked the isDevice status in the Notification permission section, my application, which opens smoothly on the emulator, does not open on real devices.\r\n\r\nWhat are your suggestions for me to solve this issue?\r\n\r\n[![enter image description here][1]][1]\r\n\r\neas.json\r\n\r\n    {\r\n      &quot;build&quot;: {\r\n        &quot;production&quot;: {\r\n          &quot;android&quot;: {\r\n            &quot;buildType&quot;: &quot;apk&quot;\r\n          },\r\n          &quot;ios&quot;: {}\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/CZVpE.png",
      "link": "https://stackoverflow.com/questions/76375896/in-expo-my-apk-file-is-giving-me-an-index-android-bundle-error",
      "title": "In Expo, my APK file is giving me an &quot;index.android.bundle&quot; error"
    },
    {
      "tags": ["typescript", "react-native", "jestjs", "expo"],
      "is_answered": false,
      "view_count": 6,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685553023,
      "creation_date": 1685553023,
      "question_id": 76375871,
      "body_markdown": "I have a expo app and inside it some simple CRUD operations. App is works fine but when I want to write some test scenarios using jest, I get this error :\r\n\r\n     FAIL  apis/index.test.tsx\r\n     Fetching Tests\r\n    &#215; Should return correct user name (1561 ms)\r\n\r\n    ● Fetching Tests › Should return correct user name\r\n\r\n    TypeError: fetch failed\r\n\r\n\r\n\r\n    Cause:\r\n    RequestContentLengthMismatchError: Request body length does not match content-length header\r\n\r\n\r\n\r\n    Test Suites: 1 failed, 1 total\r\n    Tests:       1 failed, 1 total\r\n    Snapshots:   0 total\r\n    Time:        4.033 s\r\n    Ran all test suites.\r\n\r\n\r\nand this is my code for testing :\r\n\r\n    describe(&quot;Fetching Tests&quot;, () =&gt; {\r\n      it(&quot;Should return correct user name&quot;, () =&gt; {\r\n        return SimpleCrudPersistence.addUser(&quot;ali&quot;, 12, &quot;antalia&quot;).then((data) =&gt;\r\n          expect(data.name).toBe(&quot;ali&quot;)\r\n        );\r\n      }, 30000);\r\n    });",
      "link": "https://stackoverflow.com/questions/76375871/requestcontentlengthmismatcherror-error-when-using-jest-for-testing-react-native",
      "title": "RequestContentLengthMismatchError error when using jest for testing react native fetch apis"
    },
    {
      "tags": [
        "reactjs",
        "react-native",
        "api",
        "google-places-api",
        "react-native-maps"
      ],
      "is_answered": false,
      "view_count": 14,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": -2,
      "last_activity_date": 1685552725,
      "creation_date": 1685552725,
      "question_id": 76375849,
      "body_markdown": "I want an API to show bars and clubs near the user, I&#39;ve tried foursquare bit it doesn&#39;t have all the clubs n bars in the UK, specifically Manchester, and yelp was awful top try and use. I&#39;ve tried using google places and looked into using the places API without a search bar and passing a predetermined argument such as &#39;Night Clubs&#39; but it doesn&#39;t seem possible and seems u HAVE to have a search bar with google places API, what would you suggest I do / use?\r\nThanks in advance",
      "link": "https://stackoverflow.com/questions/76375849/api-to-show-places-near-me",
      "title": "API to show places near me"
    },
    {
      "tags": ["react-native", "react-hooks"],
      "is_answered": true,
      "view_count": 23,
      "up_vote_count": 1,
      "answer_count": 2,
      "score": 1,
      "last_activity_date": 1685552606,
      "creation_date": 1685540324,
      "question_id": 76374144,
      "body_markdown": "I am building a react-native app and seems I have a problem with the useFocusEffect ? \r\nWhen the user opens the app, it displays a popup that prompts him to grant the write_settings_permission. As soon as the user returns back to the app screen, it should check if the permission was successfully granted and in that case navigate to a new screen, otherwise keep showing the popup.\r\n\r\n\r\n\r\n\r\n```lang-js\r\nimport React, {useEffect, useState} from &#39;react&#39;;\r\nimport {View, Text, ActivityIndicator, Alert} from &#39;react-native&#39;;\r\nimport {useNavigation, useFocusEffect} from &#39;@react-navigation/native&#39;;\r\nimport HotspotManager, {TetheringError} from &#39;@react-native-tethering/hotspot&#39;;\r\n\r\nconst FirstScreen = () =&gt; {\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPermissionsPopup, setShowPermissionsPopup] = useState(false);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const requestWriteSettingsPermission = async () =&gt; {\r\n    try {\r\n      await HotspotManager.openWriteSettings();\r\n      const granted = await HotspotManager.isWriteSettingsGranted();\r\n      setPermissionsGranted(granted);\r\n    } catch (error) {\r\n      if (error instanceof TetheringError) {\r\n        console.log(error.message);\r\n      }\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const checkPermissions = async () =&gt; {\r\n    try {\r\n      const granted = await HotspotManager.isWriteSettingsGranted();\r\n      console.log(\r\n        `Write settings permission is ${granted ? &#39;granted&#39; : &#39;not granted&#39;}`,\r\n      );\r\n      setPermissionsGranted(granted);\r\n    } catch (error) {\r\n      if (error instanceof TetheringError) {\r\n        console.log(error.message);\r\n      }\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() =&gt; {\r\n      checkPermissions();\r\n      console.log(&#39;test1&#39;);\r\n    }, []),\r\n  );\r\n\r\n  useEffect(() =&gt; {\r\n    const timeout = setTimeout(() =&gt; {\r\n      setLoading(false);\r\n      setShowPermissionsPopup(true);\r\n    }, 2000);\r\n\r\n    return () =&gt; {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() =&gt; {\r\n    if (permissionsGranted) {\r\n      console.log(&#39;test2&#39;);\r\n      navigation.navigate(&#39;Network&#39;);\r\n    }\r\n  }, [navigation, permissionsGranted]);\r\n\r\n  return (\r\n    &lt;View style={{flex: 1, justifyContent: &#39;center&#39;, alignItems: &#39;center&#39;}}&gt;\r\n      {loading ? (\r\n        &lt;ActivityIndicator size=&quot;large&quot; color=&quot;blue&quot; /&gt;\r\n      ) : (\r\n        &lt;Text&gt;Welcome to My App!&lt;/Text&gt;\r\n      )}\r\n\r\n      {showPermissionsPopup &amp;&amp; !permissionsGranted &amp;&amp; (\r\n        &lt;View\r\n          style={{\r\n            position: &#39;absolute&#39;,\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\r\n            justifyContent: &#39;center&#39;,\r\n            alignItems: &#39;center&#39;,\r\n          }}&gt;\r\n          &lt;View style={{backgroundColor: &#39;white&#39;, padding: 20}}&gt;\r\n            &lt;Text&gt;Please grant the required permissions to continue.&lt;/Text&gt;\r\n            &lt;Text\r\n              style={{color: &#39;blue&#39;, textDecorationLine: &#39;underline&#39;}}\r\n              onPress={requestWriteSettingsPermission}&gt;\r\n              Grant Permissions\r\n            &lt;/Text&gt;\r\n          &lt;/View&gt;\r\n        &lt;/View&gt;\r\n      )}\r\n    &lt;/View&gt;\r\n  );\r\n};\r\n\r\nexport default FirstScreen;\r\n```\r\n\r\n\r\nIt works just fine, except the part that when I navigate back to the app from the settings, I have to press the &quot;Grant the required Permissions&quot; again, navigate to settings, go back to the app and only then it seems to work, at which point I am being redirected to the new screen.\r\nWhat am I missing? \r\n\r\nAll I can think of is that the checkPermissions function is not being called when the user returns to the app because the focus effect hook is not triggered in that scenario, but I am failing to make it work even in that case.\r\n\r\nI did find a somewhat similar error in the topics, but it didn&#39;t seem to have a solution as the creator of the question solved it himself.",
      "link": "https://stackoverflow.com/questions/76374144/react-native-useeffect-usefocuseffect-usecallback-not-updating-correctly",
      "title": "react-native useEffect / useFocusEffect / useCallback not updating correctly"
    },
    {
      "tags": ["javascript", "react-native"],
      "is_answered": false,
      "view_count": 41,
      "up_vote_count": 0,
      "answer_count": 2,
      "score": 0,
      "last_activity_date": 1685551654,
      "creation_date": 1685533963,
      "question_id": 76373201,
      "body_markdown": "I&#39;m making an app with React Native and getting\r\nthis error:\r\n\r\n`Error: Text strings must be rendered within a &lt;Text&gt; component.`\r\n\r\ncode:\r\n\r\n  \r\n\r\n      const [childsName, setChildsName] = useState(&#39;&#39;);\r\n      const [childsNameToBeLinked, setChildsNameToBeLinked] = useState(&#39;&#39;);\r\n      const [email, setEmail] = useState(&#39;&#39;);\r\n      const [code, setCode] = useState(&#39;&#39;);\r\n      const [isParent, setParent] = useState(false);\r\n      const [isChild, setChild] = useState(false);\r\n      const [isLinked, setLinked] = useState(false);\r\n      const [allDoneForParents, setAllDoneForParents] = useState(false);\r\n      const [childsNameAddedNotif, setChildsNameAddedNotif] = useState(&#39;&#39;);\r\n      const [uri, setUri] = useState(&#39;&#39;);\r\n    \r\n      return (\r\n          &lt;View style={styles.container}&gt;\r\n            {!isParent &amp;&amp; !isChild &amp;&amp; (\r\n              &lt;View&gt;\r\n                &lt;View style={styles.buttonContainer}&gt;\r\n                   &lt;Button title=&quot;This Is Child&#39;s Phone&quot; onPress={() =&gt; setChild(true)} /&gt;\r\n                &lt;/View&gt;\r\n                &lt;View style={styles.buttonContainer}&gt;\r\n                  &lt;Button title=&quot;This Is Parent&#39;s Phone&quot; onPress={() =&gt; setParent(true)}  /&gt;\r\n                &lt;/View&gt;\r\n    \r\n              &lt;/View&gt;\r\n            )}\r\n            {isParent &amp;&amp; (\r\n              &lt;View&gt;\r\n                &lt;View style={styles.inputContainer}&gt;\r\n                  &lt;TextInput placeholder=&#39;@&#39; onChangeText={(val) =&gt; setEmail(val)} value={email} /&gt;\r\n                &lt;/View&gt;\r\n                &lt;View style={styles.inputContainer}&gt;\r\n                  &lt;TextInput placeholder=&#39;Enter Code&#39; onChangeText={(val) =&gt; setCode(val)} value={code} /&gt;\r\n                &lt;/View&gt;\r\n                {childsNameAddedNotif &amp;&amp; (\r\n                  &lt;View&gt;\r\n                    &lt;Text&gt;{childsNameAddedNotif}&#39;s Phone Has Been Linked&lt;/Text&gt;\r\n                  &lt;/View&gt;\r\n                )}\r\n                {!childsNameAddedNotif &amp;&amp; (\r\n                  &lt;View style={styles.submitBtn}&gt;\r\n                    &lt;Button title=&#39;Submit&#39; onPress={handleSubmit} /&gt;\r\n                  &lt;/View&gt;\r\n                )}\r\n                \r\n                &lt;View style={styles.backBtnContainer}&gt;\r\n                  &lt;BackBtn onPress={() =&gt; setParent(false)} /&gt;\r\n                &lt;/View&gt;\r\n              &lt;/View&gt;\r\n            )}\r\n            {isChild &amp;&amp; !isLinked &amp;&amp; !code &amp;&amp; (\r\n    \r\n                  &lt;View&gt;\r\n                    &lt;View style={styles.inputContainer}&gt;\r\n                      &lt;TextInput placeholder=&quot;Child&#39;s First Name&quot; onChangeText={(val) =&gt; setChildsName(val)} value={childsName} /&gt;\r\n                    &lt;/View&gt;\r\n                    &lt;View style={styles.submitBtn}&gt;\r\n                      &lt;Button title=&#39;Submit&#39; onPress={handleSubmit} /&gt;\r\n                    &lt;/View&gt;\r\n                    &lt;View style={styles.backBtnContainer}&gt;\r\n                      &lt;BackBtn onPress={() =&gt; setChild(false)} /&gt;\r\n                    &lt;/View&gt;\r\n                  &lt;/View&gt;\r\n              )}\r\n            {isChild &amp;&amp; !isLinked &amp;&amp; code &amp;&amp; (\r\n                  &lt;View&gt;\r\n                    &lt;Text&gt;OK, now use your phone, tap on This Phone Parent&#39;s Phone, enter your email and {code}&lt;/Text&gt;\r\n                  &lt;/View&gt;\r\n              )}\r\n            {isLinked &amp;&amp; !allDoneForParents &amp;&amp; (\r\n              &lt;View&gt;\r\n                &lt;View&gt;\r\n                  &lt;Text&gt;{childsNameToBeLinked}&#39;s Phone Is Now Linked&lt;/Text&gt;\r\n                  &lt;Text&gt;Would You Like To Link More Children ?&lt;/Text&gt;\r\n                &lt;/View&gt;\r\n                &lt;View&gt;\r\n                  &lt;Button title=&#39;Yes&#39; onPress={() =&gt; setLinked(false)} /&gt;\r\n                &lt;/View&gt;\r\n                &lt;View&gt;\r\n                  &lt;Button title=&#39;No&#39; onPress={() =&gt; setAllDoneForParents(true)} /&gt;\r\n                &lt;/View&gt;\r\n              &lt;/View&gt;\r\n            )}\r\n            {allDoneForParents &amp;&amp; (\r\n              &lt;View&gt;\r\n                &lt;Text&gt;All Done For You Now. Little Angel Will Notify You If Needed.&lt;/Text&gt;\r\n                &lt;Text&gt;Have a Nice Day :) &lt;/Text&gt;\r\n              &lt;/View&gt;\r\n            )}\r\n    \r\n          &lt;StatusBar style=&quot;auto&quot; /&gt;\r\n        &lt;/View&gt;\r\n    \r\n      );\r\n    }\r\n\r\nCan you see where my strings aren&#39;t within the Text component ?",
      "link": "https://stackoverflow.com/questions/76373201/why-im-getting-text-strings-must-be-rendered-within-a-text-component",
      "title": "Why I&#39;m getting &quot;Text strings must be rendered within a &lt;Text&gt; component&quot;?"
    },
    {
      "tags": ["ios", "react-native", "expo", "react-navigation"],
      "is_answered": true,
      "view_count": 1193,
      "up_vote_count": 2,
      "answer_count": 2,
      "score": 2,
      "last_activity_date": 1685551091,
      "creation_date": 1647246265,
      "question_id": 71464805,
      "body_markdown": "*Update for 2023*\r\n\r\nThe bug is back. [I reported it here][1].\r\n\r\nI tested all known fixes and they do not work currently.\r\n\r\nFollow these simple steps to reproduce:\r\n\r\n* `npx expo init &lt;yourReproNameHere&gt;`\r\n* `Use the &quot;tabs&quot; template\r\n* Fill any of the two screens with anything (I used `&lt;Button/&gt;`)\r\n* Add a `&lt;TextInput&gt;` at the end of the screen\r\n* --&gt; The keyboard hides the `&lt;TextInput&gt;` and `&lt;KeyboardAvoidingView&gt;` will not fix it\r\n\r\nThis old image still shows the bug\r\n[![Issue on iOS][2]][2]\r\n\r\n[\\[Old Bug which is solved\\]][3]\r\n\r\n\r\n  [1]: https://github.com/react-navigation/react-navigation/issues/11244\r\n  [2]: https://i.stack.imgur.com/xL5Kg.png\r\n  [3]: https://github.com/react-navigation/react-navigation/issues/3971",
      "link": "https://stackoverflow.com/questions/71464805/keyboardavoidingview-not-working-on-ios-with-react-navigation-header-and-materia",
      "title": "KeyboardAvoidingView not working on iOS with react navigation header and material bottom tabs?"
    },
    {
      "tags": ["react-native"],
      "is_answered": true,
      "view_count": 120293,
      "up_vote_count": 84,
      "answer_count": 4,
      "score": 84,
      "last_activity_date": 1685550229,
      "creation_date": 1501748370,
      "question_id": 45478621,
      "body_markdown": "I&#39;m new to react native. I&#39;m trying to change the styling of the TextInput when there is an error.\r\n\r\nHow can I make my code not as ugly?\r\n\r\n    &lt;TextInput\r\n          style={touched &amp;&amp; invalid?\r\n            {height: 40, backgroundColor: &#39;white&#39;, borderRadius: 5, padding: 10, borderWidth: 2, borderColor: &#39;red&#39;} :\r\n            {height: 40, backgroundColor: &#39;white&#39;, borderRadius: 5, padding: 10}}\r\n    &lt;/TextInput&gt;",
      "link": "https://stackoverflow.com/questions/45478621/react-native-styling-with-conditional",
      "title": "React Native styling with conditional"
    },
    {
      "tags": ["c++", "ios", "reactjs", "react-native", "expo"],
      "is_answered": false,
      "view_count": 11,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685549455,
      "creation_date": 1685549455,
      "question_id": 76375461,
      "body_markdown": "I am looking to solve a recent problem of mine in a React Native TypeScript application, ran with Expo compiler.\r\n\r\nHere is my full stack trace: \r\n\r\n\r\n```\r\nnon-std C++ exception\r\n\r\nABI48_0_0RCTFatal\r\nABI48_0_0RCTConvertArrayValue\r\nBB347F0E-F21C-3607-82E6-C8D750FDBF8C\r\nBB347F0E-F21C-3607-82E6-C8D750FDBF8C\r\nBB347F0E-F21C-3607-82E6-C8D750FDBF8C\r\n_dispatch_main_queue_callback_4CF\r\n4230C122-42E8-383B-BEEC-EE7B61F8BB61\r\n4230C122-42E8-383B-BEEC-EE7B61F8BB61\r\nCFRunLoopRunSpecific\r\nGSEventRunModal\r\nB3834960-244B-34E4-9EA0-CA4BB44EF0F3\r\nUIApplicationMain\r\nmain\r\n8A423F3F-B318-315E-99C7-05EE532E9C0D\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nHere is my index.tsx: import { registerRootComponent } from &#39;expo&#39;;\r\n\r\nimport App from &#39;./App&#39;;\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent(&#39;main&#39;, () =&gt; App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n\r\nAnd App.tsx:       \r\n```\r\nimport React, { useState } from &#39;react&#39;;\r\nimport { NavigationContainer } from &#39;@react-navigation/native&#39;;\r\nimport { createStackNavigator } from &#39;@react-navigation/stack&#39;;\r\nimport AccountInfo from &#39;./components/account/AccountInfo&#39;;\r\nimport ProjectInfo from &#39;./components/account/ProjectInfo&#39;;\r\nimport CustomerBasket from &#39;./components/account/CustomerBasket&#39;;\r\nimport Queries from &#39;./components/account/Queries&#39;;\r\nimport DeleteAccount from &#39;./components/account/DeleteAccount&#39;;\r\nimport { BrandVarietiesProps, StackParamList } from &#39;./types/types&#39;;\r\n\r\nimport Intro from &#39;./components/onboarding/Intro&#39;;\r\nimport PrivacyPolicy from &#39;./components/onboarding/PrivacyPolicy&#39;;\r\nimport ShopFront from &#39;./components/onboarding/ShopFront&#39;;\r\nimport VerifyAge from &#39;./components/onboarding/VerifyAge&#39;;\r\n\r\nimport ForgotPassword from &#39;./components/register/ForgotPassword&#39;;\r\nimport LoginScreen from &#39;./components/register/LoginScreen&#39;;\r\nimport NewPassword from &#39;./components/register/NewPassword&#39;;\r\nimport SignUp from &#39;./components/register/SignUp&#39;;\r\nimport VerifyEmail from &#39;./components/register/VerifyEmail&#39;;\r\n\r\nimport DeliveryAddress from &#39;./components/sales/DeliveryAddress&#39;;\r\n\r\nimport BrandVarieties from &#39;./components/shop/BrandVarieties&#39;;\r\nimport JuiceProductPage from &#39;./components/shop/JuiceProductPage&#39;;\r\nimport JuiceScreen from &#39;./components/shop/JuiceScreen&#39;;\r\nimport ProductPage from &#39;./components/shop/ProductPage&#39;;\r\nimport SearchProducts from &#39;./components/shop/SearchProducts&#39;;\r\nimport VapeScreen from &#39;./components/shop/VapeScreen&#39;;\r\nimport NonDisposableScreen from &#39;./components/shop/NonDisposableScreen&#39;;\r\nimport NonDisposableProductPage from &#39;./components/shop/NonDisposableProductPage&#39;;\r\n\r\nimport NotFoundScreen from &#39;./components/NotFoundScreen&#39;;\r\n\r\nimport ContinueShopping from &#39;./components/shop/ContinueShopping&#39;;\r\n\r\nimport SubSignUp from &#39;./components/subscriptions/SubSignUp&#39;;\r\nimport SubVapeScreen from &#39;./components/subscriptions/SubVapeScreen&#39;;\r\nimport ChooseFlavours from &#39;./components/subscriptions/ChooseFlavours&#39;;\r\nimport ManageSubscription from &#39;./components/subscriptions/ManageSubscription&#39;;\r\n\r\nimport ChangeAddress from &#39;./components/subscriptions/ChangeAddress&#39;;\r\nimport CancelMembership from &#39;./components/subscriptions/CancelMembership&#39;;\r\nimport CancelConfirm from &#39;./components/subscriptions/CancelConfirm&#39;;\r\n\r\nimport { View, Appearance, Text } from &#39;react-native&#39;;\r\n\r\nimport { lightStyles, darkStyles } from &#39;./styles.js&#39;;\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\n\r\nclass ErrorBoundary extends React.Component&lt;Props&gt; {\r\n  state = {\r\n    hasError: false,\r\n    error: null,\r\n  };\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error(&#39;An error occurred:&#39;, error);\r\n    console.error(&#39;Error info:&#39;, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return &lt;View&gt;\r\n        &lt;Text&gt;Error encountered&lt;/Text&gt;\r\n        &lt;/View&gt;;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nconst App: React.FC = () =&gt; {\r\n  const Stack = createStackNavigator&lt;StackParamList&gt;();\r\n\r\n  const WrappedConfirmationPage: React.FC = () =&gt; (\r\n    &lt;View&gt;\r\n      {/* Placeholder content */}\r\n    &lt;/View&gt;\r\n  );\r\n\r\n  console.log(&quot;It&#39;s gucci!&quot;)\r\n  const deviceTheme = Appearance.getColorScheme(); // &#39;light&#39; or &#39;dark&#39;\r\n  const [isDarkMode, setIsDarkMode] = useState(deviceTheme === &#39;dark&#39;);\r\n  const [isSubscribed, setIsSubscribed] = useState(true);\r\n\r\n  const styles = isDarkMode ? darkStyles : lightStyles;\r\n\r\n  return (\r\n    &lt;ErrorBoundary&gt;\r\n    &lt;View style={{ backgroundColor: styles.background }}&gt;\r\n      &lt;NavigationContainer&gt;\r\n        &lt;Stack.Navigator initialRouteName=&quot;Intro&quot;&gt;\r\n          &lt;Stack.Screen name=&quot;AccountInfo&quot; component={AccountInfo} /&gt;\r\n          &lt;Stack.Screen name=&quot;CustomerBasket&quot; component={CustomerBasket} /&gt;\r\n          &lt;Stack.Screen name=&quot;DeleteAccount&quot; component={DeleteAccount} /&gt;\r\n          &lt;Stack.Screen name=&quot;ProjectInfo&quot; component={ProjectInfo} /&gt;\r\n          &lt;Stack.Screen name=&quot;Queries&quot; component={Queries} /&gt;\r\n\r\n          &lt;Stack.Screen name=&quot;Intro&quot; component={Intro} /&gt;\r\n          &lt;Stack.Screen name=&quot;PrivacyPolicy&quot; component={PrivacyPolicy} /&gt;\r\n          &lt;Stack.Screen name=&quot;ShopFront&quot; component={ShopFront} /&gt;\r\n          &lt;Stack.Screen name=&quot;VerifyAge&quot; component={VerifyAge} /&gt;\r\n\r\n          &lt;Stack.Screen name=&quot;ForgotPassword&quot; component={ForgotPassword} /&gt;\r\n          &lt;Stack.Screen name=&quot;LoginScreen&quot; component={LoginScreen} /&gt;\r\n          &lt;Stack.Screen name=&quot;NewPassword&quot; component={NewPassword} /&gt;\r\n          &lt;Stack.Screen name=&quot;SignUp&quot; component={SignUp} /&gt;\r\n          &lt;Stack.Screen name=&quot;VerifyEmail&quot; component={VerifyEmail} /&gt;\r\n\r\n          &lt;Stack.Screen\r\n            name=&quot;ConfirmationPage&quot;\r\n            component={WrappedConfirmationPage}\r\n          /&gt;\r\n          &lt;Stack.Screen name=&quot;DeliveryAddress&quot; component={DeliveryAddress} /&gt;\r\n\r\n          &lt;Stack.Screen name=&quot;BrandVarieties&quot; component={BrandVarieties as any} /&gt;\r\n          &lt;Stack.Screen name=&quot;ContinueShopping&quot; component={ContinueShopping} /&gt;\r\n          &lt;Stack.Screen name=&quot;JuiceProductPage&quot; component={JuiceProductPage} /&gt;\r\n          &lt;Stack.Screen name=&quot;JuiceScreen&quot; component={JuiceScreen} /&gt;\r\n          &lt;Stack.Screen name=&quot;ProductPage&quot; component={ProductPage} /&gt;\r\n          &lt;Stack.Screen name=&quot;SearchProducts&quot; component={SearchProducts as any} /&gt;\r\n          &lt;Stack.Screen name=&quot;VapeScreen&quot; component={VapeScreen} /&gt;\r\n          &lt;Stack.Screen\r\n            name=&quot;NonDisposableScreen&quot;\r\n            component={NonDisposableScreen}\r\n          /&gt;\r\n          &lt;Stack.Screen\r\n            name=&quot;NonDisposableProductPage&quot;\r\n            component={NonDisposableProductPage}\r\n          /&gt;\r\n\r\n          &lt;Stack.Screen name=&quot;SubSignUp&quot; component={SubSignUp} /&gt;\r\n          &lt;Stack.Screen name=&quot;SubVapeScreen&quot; component={SubVapeScreen} /&gt;\r\n\r\n          &lt;Stack.Screen name=&quot;NotFoundScreen&quot; component={NotFoundScreen} /&gt;\r\n          &lt;Stack.Screen name=&quot;ChooseFlavours&quot; component={ChooseFlavours as any} /&gt;\r\n          &lt;Stack.Screen \r\n            name=&quot;ManageSubscription&quot;\r\n            component={ManageSubscription as any}\r\n          /&gt;\r\n\r\n          &lt;Stack.Screen\r\n            name=&quot;CancelMembership&quot;\r\n            component={CancelMembership as any}\r\n          /&gt;\r\n          &lt;Stack.Screen name=&quot;ChangeAddress&quot; component={ChangeAddress} /&gt;\r\n          {/* &lt;Stack.Screen name=&quot;ChangeFlavours&quot; component={ChangeFlavours as any} /&gt; */}\r\n          &lt;Stack.Screen\r\n            name=&quot;CancelConfirm&quot;\r\n            component={CancelConfirm as any}\r\n\r\n          /&gt;\r\n        &lt;/Stack.Navigator&gt;\r\n      &lt;/NavigationContainer&gt;\r\n    &lt;/View&gt;\r\n    &lt;/ErrorBoundary&gt;\r\n\r\n \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n```\r\nI would appreciate some help.\r\nThanks,\r\n\r\nI tried adding error boundaries to prevent the exception but this was unsucessful",
      "link": "https://stackoverflow.com/questions/76375461/how-can-i-solve-a-non-std-c-exception-in-my-react-native-typescript-applicatio",
      "title": "How can I solve a non-std C++ exception in my React Native TypeScript application with Expo compiler?"
    },
    {
      "tags": ["javascript", "reactjs", "react-native", "navigation", "tabbar"],
      "is_answered": true,
      "view_count": 34,
      "up_vote_count": 2,
      "answer_count": 1,
      "score": 2,
      "last_activity_date": 1685549123,
      "creation_date": 1685534282,
      "question_id": 76373252,
      "body_markdown": "I need the user registration and login screens to not be displayed in the `TabBar` of the App\r\nI have a simple application in which I am trying to have two types of user interface, one for a guest mode and one for when the user is authenticated.\r\nI have created a navigation for each `authentication` conditional, so that the TabBar corresponding to each state of the application is displayed, or guest mode or authenticated mode. I also have a `TabBar` Component to show the Icons of each of the Navigations.\r\n\r\n\r\nThe problem arises when I want to add the `LoginScreen` and `RegisterScreen` screens since I can&#39;t access them.\r\n\r\nI have tried to create a third `Navigation` (AuthNavigator ) to manage these screens, and finally got access but they show up on the TabBar,\r\nBut this cannot be, these screens cannot be accessed from the `TabBar`\r\n\r\nI need them to be in the navigation, but not show on the `TabBar`.\r\n\r\nIn the `TabBar` file these screens are not added, so the `Icon` is not shown, but the title is\r\n\r\nI have tried using `options={{ tabBarVisible: false }} `, but this has no effect\r\n\r\nAlso `display = &quot;none&quot;` without success.\r\n\r\nI have looked for solutions in Google and I have not found anything.\r\n\r\nI want to show my navigation system to guide me what I&#39;m doing. wrong and can correct my mistakes.\r\n\r\n---------  App.js ---------\r\n\r\n\r\n    import React from &#39;react&#39;\r\n    import { NavigationContainer } from &#39;@react-navigation/native&#39;\r\n    import GuestNavigator from &#39;./navigation/GuestNavigator&#39;\r\n    import AppNavigator from &#39;./navigation/AppNavigator&#39;\r\n    \r\n    const App = () =&gt; {\r\n     \r\n      const isUserAuthenticated = false; \r\n    \r\n      return (\r\n        &lt;NavigationContainer&gt;\r\n          {isUserAuthenticated ? (\r\n            &lt;AppNavigator /&gt;\r\n          ) : (\r\n            &lt;GuestNavigator /&gt;\r\n          )}\r\n        &lt;/NavigationContainer&gt;\r\n      )\r\n    }\r\n    export default App \r\n\r\n\r\n**---This is the navigation in GUEST mode---**\r\n\r\n ----  GuestNavigator.JS -------\r\n\r\n\r\n\r\n\r\n    import { createBottomTabNavigator } from &#39;@react-navigation/bottom-tabs&#39;;\r\n    import TabBar from &#39;../components/TabBar&#39;;\r\n    \r\n    const Tab = createBottomTabNavigator();\r\n    \r\n    const GuestNavigator = ({ handleLogin }) =&gt; {\r\n      return (\r\n        &lt;Tab.Navigator tabBar={props =&gt; &lt;TabBar {...props} /&gt;}&gt;\r\n          &lt;Tab.Screen name=&quot;Home&quot; component={HomeScreen} /&gt;\r\n          &lt;Tab.Screen name=&quot;SampleNotas&quot; component={SampleNotasScreen} /&gt;\r\n          &lt;Tab.Screen name=&quot;SampleCuras&quot; component={SampleCurasScreen} /&gt;\r\n          &lt;Tab.Screen name=&quot;SamplePerfil&quot; component={SamplePerfilScreen} /&gt;\r\n          &lt;Tab.Screen\r\n            name=&quot;Login&quot;\r\n            options={{ tabBarVisible: false }}\r\n            children={() =&gt; &lt;LoginScreen handleLogin={handleLogin} /&gt;}\r\n          /&gt;\r\n        &lt;/Tab.Navigator&gt;\r\n      );\r\n    };\r\n    export default GuestNavigator; \r\n\r\n\r\n***--This is the navigation in the AUTHENTICATED mode --***\r\n\r\n------ AppNavigator.JS ---------\r\n\r\n\r\n    import { createBottomTabNavigator } from &#39;@react-navigation/bottom-tabs&#39;;\r\n    import TabBar from &#39;../components/TabBar&#39;;\r\n    const Tab = createBottomTabNavigator();\r\n    \r\n    const AppNavigator = () =&gt; {\r\n      return (\r\n        &lt;Tab.Navigator tabBar={props =&gt; &lt;TabBar {...props} /&gt;}&gt;\r\n          &lt;Tab.Screen name=&quot;Notas&quot; component={NotasScreen} /&gt;\r\n          &lt;Tab.Screen name=&quot;CrearNota&quot; component={CrearNotaScreen} options={{ tabBarVisible: false }} /&gt;\r\n          &lt;Tab.Screen name=&quot;Curas&quot; component={CurasScreen} /&gt;\r\n          &lt;Tab.Screen name=&quot;Recordatorios&quot; component={RecordatoriosScreen}/&gt;\r\n          &lt;Tab.Screen name=&quot;Profile&quot; component={ProfileScreen} /&gt;\r\n          &lt;Tab.Screen name=&quot;EditProfile&quot; component={EditarProfileScreen} options={{ tabBarVisible: false }} /&gt;\r\n        &lt;/Tab.Navigator&gt;\r\n      );\r\n    };\r\n    export default AppNavigator\r\n\r\n\r\nAnd I have also created a navigation system only for Login and Register\r\n\r\n-------  AuthNavigator.js ----------\r\n\r\n    import React from &#39;react&#39;\r\n    import { NavigationContainer } from &#39;@react-navigation/native&#39;\r\n    import { createStackNavigator } from &#39;@react-navigation/stack&#39;\r\n    import LoginScreen from &#39;../screens/AuthScreens/LoginScreen&#39;\r\n    import RegisterScreen from &#39;../screens/AuthScreens/RegisterScreen&#39;\r\n    \r\n    const Stack = createStackNavigator()\r\n    \r\n    const AuthNavigator = () =&gt; {\r\n      return (\r\n        &lt;NavigationContainer&gt;\r\n          &lt;Stack.Navigator&gt;\r\n            &lt;Stack.Screen\r\n              name=&quot;Login&quot;\r\n              component={LoginScreen}\r\n              options={{\r\n                headerShown: false,\r\n              }}\r\n            /&gt;\r\n            &lt;Stack.Screen\r\n              name=&quot;Register&quot;\r\n              component={RegisterScreen}\r\n              options={{\r\n                title: &#39;Registro&#39;,\r\n              }}\r\n            /&gt;\r\n          &lt;/Stack.Navigator&gt;\r\n        &lt;/NavigationContainer&gt;\r\n      )\r\n    }\r\n    \r\n    export default AuthNavigator\r\n\r\n\r\nOf course if I remove LoginScrein from the GuestNavigator navigation, I get error:\r\n\r\n\r\n**ERROR  The action &#39;NAVIGATE&#39; with payload {&quot;name&quot;:&quot;Login&quot;} was not handled by any navigator.\r\nDo you have a screen named &#39;Login&#39;?\r\nIf you&#39;re trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\r\nThis is a development-only warning and won&#39;t be shown in production.**\r\n\r\n\r\nAnd I also show the TabBar although it shows the icon and these screens are not added.\r\n ----- TabBar.js -----------\r\n\r\n    import React from &#39;react&#39;;\r\n    import { View, TouchableOpacity, Text } from &#39;react-native&#39;;\r\n    import Icon from &#39;react-native-vector-icons/Ionicons&#39;;\r\n    \r\n    const TabBar = ({ state, descriptors, navigation, isUserAuthenticated }) =&gt; {\r\n      return (\r\n        &lt;View style={{ flexDirection: &#39;row&#39;, height: 60, backgroundColor: &#39;#F3F9F5&#39; }}&gt;\r\n          {state.routes.map((route, index) =&gt; {\r\n            const { options } = descriptors[route.key];\r\n    \r\n            const onPress = () =&gt; {\r\n              const event = navigation.emit({\r\n                type: &#39;tabPress&#39;,\r\n                target: route.key,\r\n              });\r\n    \r\n              if (!event.defaultPrevented) {\r\n                navigation.navigate(route.name);\r\n              }\r\n            };\r\n    \r\n            const isFocused = state.index === index;\r\n            const color = isFocused ? &#39;#08A438&#39; : &#39;black&#39;;\r\n    \r\n            let iconName;\r\n            if (!isUserAuthenticated) {\r\n              // Iconos para el modo invitado\r\n              if (route.name === &#39;Home&#39;) {\r\n                iconName = &#39;home&#39;;\r\n              } else if (route.name === &#39;SampleNotas&#39;) {\r\n                iconName = &#39;list&#39;;\r\n              } else if (route.name === &#39;SampleCuras&#39;) {\r\n                iconName = &#39;medkit&#39;;\r\n              } else if (route.name === &#39;SamplePerfil&#39;) {\r\n                iconName = &#39;person&#39;;\r\n              }\r\n            } else {\r\n              // Iconos para el modo autenticado\r\n              if (route.name === &#39;Notas&#39;) {\r\n                iconName = &#39;notes&#39;;\r\n              } else if (route.name === &#39;Curas&#39;) {\r\n                iconName = &#39;medkit&#39;;\r\n              } else if (route.name === &#39;Recordatorios&#39;) {\r\n                iconName = &#39;alarm&#39;;\r\n              } else if (route.name === &#39;Profile&#39;) {\r\n                iconName = &#39;person&#39;;\r\n              }\r\n            }\r\n    \r\n            return (\r\n              &lt;TouchableOpacity\r\n                key={index}\r\n                onPress={onPress}\r\n                style={{ flex: 1, alignItems: &#39;center&#39;, justifyContent: &#39;center&#39; }}\r\n              &gt;\r\n                &lt;Icon name={iconName} size={24} color={color} /&gt;\r\n                &lt;Text style={{ color }}&gt;{route.name}&lt;/Text&gt;\r\n              &lt;/TouchableOpacity&gt;\r\n            );\r\n          })}\r\n        &lt;/View&gt;\r\n      );\r\n    };\r\n    export default TabBar\r\n\r\n\r\n\r\n",
      "link": "https://stackoverflow.com/questions/76373252/how-to-add-two-screens-to-the-navigation-of-the-react-native-app-without-showing",
      "title": "How to add two screens to the navigation of the React Native app without showing them in the TabBar?"
    },
    {
      "tags": ["javascript", "reactjs", "react-native", "expo"],
      "is_answered": false,
      "view_count": 16519,
      "up_vote_count": 3,
      "answer_count": 2,
      "score": 2,
      "last_activity_date": 1685548845,
      "creation_date": 1617217181,
      "question_id": 66893762,
      "body_markdown": "Error:\r\n\r\n&quot;Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.You likely forgot to export your component from the file it&#39;s defined in, or you might have mixed up default and named imports.\r\n\r\nCheck the render method of `App`.&quot;\r\n\r\n\r\nindex.js\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    import { registerRootComponent } from &#39;expo&#39;;\r\n\r\n    import App from &#39;./App&#39;;\r\n\r\n    // registerRootComponent calls AppRegistry.registerComponent(&#39;main&#39;, () =&gt; App);\r\n    // It also ensures that whether you load the app in the Expo client or in a native build,\r\n    // the environment is set up appropriately\r\n    registerRootComponent(App);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nApp.js\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    import React, { Component } from &#39;react&#39;;\r\n    import { NavigationCointainer } from &#39;@react-navigation/native&#39;;\r\n    import { createStackNavigator } from &#39;@react-navigation/stack&#39;;\r\n    import Favoritos from &#39;./Favoritos&#39;;\r\n    import InfoGeneral from &#39;./InfoGeneral&#39;;\r\n    import Principal from &#39;./Principal&#39;;\r\n\r\n    const Stack = createStackNavigator();\r\n\r\n    export default class App extends Component {\r\n      render(){\r\n        return(\r\n          &lt;NavigationCointainer&gt;\r\n            &lt;Stack.Navigator initialRouteName=&#39;Principal&#39;&gt;\r\n              &lt;Stack.Screen name=&#39;Principal&#39; component={Principal}/&gt;\r\n              &lt;Stack.Screen name=&#39;InfoGeneral&#39; component={InfoGeneral}/&gt;\r\n              &lt;Stack.Screen name=&#39;Favoritos&#39; component={Favoritos}/&gt;\r\n            &lt;/Stack.Navigator&gt;\r\n          &lt;/NavigationCointainer&gt;\r\n        );\r\n      };\r\n    }\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n",
      "link": "https://stackoverflow.com/questions/66893762/error-element-type-is-invalid-expected-a-string-for-built-in-components-or-a",
      "title": "Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. React"
    },
    {
      "tags": ["android", "react-native", "stripe-payments"],
      "is_answered": false,
      "view_count": 30,
      "up_vote_count": 0,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1685548635,
      "creation_date": 1685519098,
      "question_id": 76371236,
      "body_markdown": "The Android builds in the Nx project are failing due to an error related to annotations when attempting to install the `stripe/react-native` package. \r\n\r\nHowever, this issue does not arise when installing the package on a new project using the react-native CLI.\r\n\r\n\r\n```\r\nTask :stripe_stripe-react-native:packageDebugResources FAILED\r\n\r\nDeprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\r\n\r\nYou can use &#39;--warning-mode all&#39; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\r\n\r\nSee https://docs.gradle.org/7.3.3/userguide/command_line_interface.html#sec:command_line_warnings\r\n58 actionable tasks: 2 executed, 56 up-to-date\r\nERROR:/Users/esfxra/monorepo/apps/test-app/node_modules/@stripe/stripe-react-native/android/src/main/res/layout/googlepay_button_dark.xml: Resource and asset merger: /Users/esfxra/monorepo/apps/test-app/node_modules/@stripe/stripe-react-native/android/src/main/res/layout/googlepay_button_dark.xml is not annotated as @Input\r\njava.lang.IllegalStateException: /Users/esfxra/monorepo/apps/test-app/node_modules/@stripe/stripe-react-native/android/src/main/res/layout/googlepay_button_dark.xml is not annotated as @Input\r\nFAILURE: Build failed with an exception.\r\n\r\nWhat went wrong:\r\nExecution failed for task &#39;:stripe_stripe-react-native:packageDebugResources&#39;.\r\n&gt;! &gt; /Users/esfxra/monorepo/apps/test-app/node_modules/@stripe/stripe-react-native/android/src/main/res/layout/googlepay_button_dark.xml: Error: is not annotated as @Input\r\n```\r\n\r\nSteps to reproduce the behavior:\r\n\r\n- Run npm install @stripe/stripe-react-native\r\n- Integrate the &lt;StripeProvider&gt;{...}&lt;/StripeProvider&gt; component\r\n- Run npx nx run wifi-app:run-android\r\n- See error",
      "link": "https://stackoverflow.com/questions/76371236/google-pay-missing-annotations-stripe-react-native",
      "title": "Google Pay: Missing annotations Stripe React Native"
    },
    {
      "tags": [
        "reactjs",
        "react-native",
        "core-nfc",
        "react-native-nfc-manager"
      ],
      "is_answered": false,
      "view_count": 3,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685547584,
      "creation_date": 1685547584,
      "question_id": 76375213,
      "body_markdown": "I&#39;m trying to implement a new functionality to my NFC Scanner App.\r\nIt takes the UID of the Tag, the current Apex Session Number and the Date and Hash it and send it out to our Apex Server.\r\n\r\nThe problem I&#39;m facing is that while under Android I can easily get the NFC Tag UID by \r\n\r\n```\r\nNfcManager.setEventListener(NfcEvents.DiscoverTag, tag =&gt; {\r\n      tagFound = tag;\r\n      const tagID = tagFound.id; //saves the tagID from the tag object\r\n      /*.......\r\n```\r\n\r\n     \r\nBut when trying to access it the same way with iOS I&#39;m only getting &#39;undefined&#39; or &#39;null&#39;.\r\n\r\nI tried different approaches accessing it, but even when piping out the complete tag object into a JSON I only get the contents of the NDEF Message and not the UID:\r\n\r\n\r\n```\r\n{\r\n  &quot;uid&quot;: null,\r\n  &quot;payload&quot;: [\r\n    {\r\n      &quot;type&quot;: [\r\n        84\r\n      ],\r\n      &quot;id&quot;: [],\r\n      &quot;payload&quot;: [\r\n        2,\r\n        101,\r\n        110,\r\n        77,\r\n        67,\r\n        67,\r\n        49,\r\n        48,\r\n        48,\r\n        48,\r\n        48,\r\n        49\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\n\r\n\r\nI tried using different libraries, but they&#39;re all based on the [react-native-nfc-manager](https://github.com/revtel/react-native-nfc-manager \r\n) library.\r\n\r\n\r\n",
      "link": "https://stackoverflow.com/questions/76375213/get-nfctag-uid-on-ios-with-react-native-nfc-manager",
      "title": "Get NfcTag UID on IOS with react-native-nfc-manager"
    },
    {
      "tags": ["javascript", "reactjs", "react-native"],
      "is_answered": false,
      "view_count": 14,
      "up_vote_count": 0,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1685547422,
      "creation_date": 1685544823,
      "question_id": 76374805,
      "body_markdown": "In my react-native app I can use AppState to detect if my app went into background mode or user opened it (foreground mode I think), I was wondering if there is a way to detect initial app start (when app first launches, and the splash screen appears) from a normal foreground state (user opened app and everything is already there).\r\n\r\nMy code:\r\n\r\n```\r\nconst [appState, setAppState] = useState(AppState.currentState);\r\n\r\n  useEffect(() =&gt; {\r\n    const appStateListener = AppState.addEventListener(&#39;change&#39;, //can be &#39;background&#39; or &#39;active&#39;\r\n        nextAppState =&gt; {\r\n        \r\n        setAppState(nextAppState);\r\n       \r\n        if(nextAppState == &#39;background&#39;)\r\n        {\r\n            //entered background mode\r\n        }\r\n        else if(nextAppState == &#39;active&#39; || null)\r\n        {\r\n            //entered foreground mode\r\n            \r\n        }\r\n    },\r\n    );\r\n    return () =&gt; {\r\n      appStateListener?.remove();\r\n    };\r\n  }, []);\r\n```",
      "link": "https://stackoverflow.com/questions/76374805/react-native-detect-initial-app-statup-with-appstate-different-from-foregroun",
      "title": "React Native: detect initial app statup with AppState , different from foreground state"
    },
    {
      "tags": ["react-native"],
      "is_answered": false,
      "view_count": 162,
      "up_vote_count": 0,
      "answer_count": 2,
      "score": -1,
      "last_activity_date": 1685546676,
      "creation_date": 1677387202,
      "question_id": 75570053,
      "body_markdown": "I am using React Native after a gap of 2 years. \r\n\r\nI try to set up a new app using the [instructions the docs](https://reactnative.dev/docs/environment-setup). Previously, these instructions used to work very well.\r\n\r\nFollowing the docs, I first do `npx react-native@latest init AwesomeProject` followed by `npx react-native start`. \r\n\r\nNow when I do `npx react-native run-android`, I get a strange error\r\n\r\n`error: unknown command &#39;run-android&#39;`\r\n\r\nWhat might be causing this and how do I fix things?",
      "link": "https://stackoverflow.com/questions/75570053/react-native-error-unknown-command-run-android",
      "title": "React Native - error: &quot;unknown command&quot; run-android"
    },
    {
      "tags": [
        "javascript",
        "reactjs",
        "react-native",
        "debugging",
        "react-devtools"
      ],
      "is_answered": false,
      "view_count": 25,
      "up_vote_count": 0,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1685546019,
      "creation_date": 1685460198,
      "question_id": 76366350,
      "body_markdown": "I&#39;m writing code using React native and compiling from android studio with emulator. I do cntrl+m on the emulator and say &quot;show inspector&quot; and click on the elements, but it doesn&#39;t say on which line the code is. I also used dev-tool. I couldn&#39;t find it there either.The &quot;&lt;&gt;&quot; part appears to be unclickable.\r\n\r\nMy question is: How do I see the source code line and go to the main code when I click on the element(button,text....)?",
      "link": "https://stackoverflow.com/questions/76366350/how-can-i-go-to-the-source-code-of-elements-in-react-native",
      "title": "How can I go to the source code of elements in React native?"
    },
    {
      "tags": [
        "react-native",
        "react-redux",
        "mqtt",
        "paho",
        "raspberry-pi-pico"
      ],
      "is_answered": false,
      "view_count": 11,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1685545957,
      "creation_date": 1685542589,
      "question_id": 76374470,
      "body_markdown": "I am using redux in react native cli for the mqtt request which is working onClick and it is working fine on my build format and it is sending data to the mqtt server but when i released the app on play store or use its release build it is giving error(onConnectionLost:undefined).\r\n\r\n\r\nmy code that I am using is:\r\n\r\n\r\n```\r\nexport const EcoMode = (user) =&gt; {\r\n  // debugger;\r\n  // console.log(user, &quot;coming hear&quot;);\r\n  return (dispatch) =&gt; {\r\n    // const { authtoken, field2 } = user;\r\n    // console.log(authtoken,&quot;ekvhjwejh&quot;);\r\n\r\n    const client = new Client({ uri: &#39;ws://192.168.10.111:9001/ws&#39;, clientId: &#39;JOULS ECOTECH243546578989&#39;, storage: myStorage });\r\n    // set event handlers\r\n    client.on(&#39;connectionLost&#39;, (responseObject) =&gt; {\r\n      if (responseObject.errorCode !== 0) {\r\n        console.log(responseObject.errorMessage);\r\n      }\r\n    });\r\n    const onConnect = () =&gt; {\r\n\r\n      client.on(&#39;messageReceived&#39;, (message) =&gt; {\r\n        if (message.destinationName === &#39;Jouls_Ecotech_User_Notifications&#39;) {\r\n          const updatedMessages = [...topic1State.messages, message.payloadString];\r\n          topic1State.messages = updatedMessages;\r\n          const sample = message.payloadString\r\n          dispatch(setStateValue(message.payloadString));\r\n          console.log(&#39;Jouls_Ecotech_User_Notifications:&#39;, message.payloadString);\r\n        } else if (message.destinationName === &#39;Jouls_Ecotech_User_Output&#39;) {\r\n          const updatedMessages = [...topic2State.messages, message.payloadString];\r\n          topic2State.messages = updatedMessages;\r\n          dispatch(setModeValue(message?.payloadString));\r\n          console.log(&#39;Jouls_Ecotech_User_Output:&#39;, message.payloadString);\r\n        } else if (message.destinationName === &#39;Jouls_Ecotech_User_Energy&#39;) {\r\n          const updatedMessages = [...topic3State.messages, message.payloadString];\r\n          topic3State.messages = updatedMessages;\r\n          dispatch(setEnergy(message?.payloadString));\r\n          console.log(&#39;Jouls_Ecotech_User_Energy:&#39;, message.payloadString);\r\n        }\r\n      });\r\n    }\r\n\r\n    client.connect()\r\n      .then(() =&gt; {\r\n        // Once a connection has been made, make a subscription and send a message.\r\n        console.log(&#39;onConnect&#39;);\r\n        return Promise.all([\r\n          client.subscribe(&#39;Jouls_Ecotech_User_Notifications&#39;), // Topic 1\r\n          client.subscribe(&#39;Jouls_Ecotech_User_Output&#39;), // Topic 2\r\n          client.subscribe(&#39;Jouls_Ecotech_User_Energy&#39;) // Topic 3\r\n        ]);\r\n      })\r\n      .then(() =&gt; {\r\n        const sampleee = {\r\n          &quot;Charging Mode&quot;: &quot;Eco_Mode&quot;\r\n        }\r\n        // const message = new Message(JSON.stringify(user));\r\n        // message.destinationName = &#39;Jouls_Ecotech_User_ID&#39;;\r\n        const sample = new Message(JSON.stringify(sampleee));\r\n        sample.destinationName = &#39;Jouls_Ecotech_User_Charging Modes&#39;;\r\n        // client.send(message);\r\n        client.send(sample);\r\n      }).then(() =&gt; {\r\n        onConnect()\r\n      })\r\n      .catch((responseObject) =&gt; {\r\n        if (responseObject.errorCode !== 0) {\r\n          console.log(&#39;onConnectionLost:&#39; + responseObject.errorMessage);\r\n        }\r\n      })\r\n\r\n\r\n    //   client.onConnectionLost = onConnectionLost;\r\n    //   client.onMessageArrived = onMessageArrived;\r\n  }\r\n}\r\n```\r\nI am using this request that is working when i am using it in a build format but is not working when it is in release format and we have checked the connection status from different devices and changed the ip for the connection it is working when i am using build app and also i have tried running it in someone else phone it is working fine but when it come to release it is giving errors `(onConnectionLost:undefined)`.",
      "link": "https://stackoverflow.com/questions/76374470/i-am-using-mqtt-which-is-not-working-when-i-am-using-the-release-version-but-it",
      "title": "I am using mqtt which is not working when i am using the release version but it is working when i am using it in buid in react native"
    },
    {
      "tags": ["react-native", "react-native-paper"],
      "is_answered": true,
      "view_count": 3677,
      "up_vote_count": 5,
      "answer_count": 4,
      "score": 5,
      "last_activity_date": 1685544907,
      "creation_date": 1611241086,
      "question_id": 65830042,
      "body_markdown": " I am using **Button** component from `react-native-paper` for my application. I set by background to some value. How can I change the ripple color that appears when touched.\r\n \r\nMy button component\r\n\r\n    &lt;Button\r\n        mode=&quot;contained&quot;\r\n        style={styles.button}\r\n        labelStyle={styles.buttonLabel}\r\n        uppercase={false}\r\n        onPress={() =&gt; {}}\r\n    &gt;\r\n        Click Here\r\n      &lt;/Button&gt;\r\n\r\nStyles used\r\n\r\n    button: {\r\n      marginTop: 30,\r\n      backgroundColor: Colors.BRIGHT_YELLOW,\r\n      padding: 5,\r\n      borderRadius: 10\r\n    },\r\n    buttonLabel: {\r\n      fontFamily: FONT_FAMILY.POPPINS_MEDIUM,\r\n      fontSize: FONT_SIZE[18],\r\n      color: Colors.PURE_WHITE\r\n    }",
      "link": "https://stackoverflow.com/questions/65830042/how-to-change-ripple-color-of-button-in-react-native-paper",
      "title": "How to change ripple color of button in react-native-paper"
    },
    {
      "tags": ["javascript", "ios", "reactjs", "typescript", "react-native"],
      "is_answered": false,
      "view_count": 20,
      "up_vote_count": 0,
      "answer_count": 0,
      "score": -2,
      "last_activity_date": 1685543725,
      "creation_date": 1685532099,
      "question_id": 76372946,
      "body_markdown": "&gt; compiling JS failed: 9983:4:&#39;}&#39; expected at end of object literal &#39;{...&#39; Buffer size 10444163 starts with: 766172205f5f42554e444c455f535441 and has protection mode(s):r--p \r\n\r\nhow to solve this error?\r\n\r\n\r\n[![enter image description here](https://i.stack.imgur.com/Me1ru.png)](https://i.stack.imgur.com/Me1ru.png)",
      "link": "https://stackoverflow.com/questions/76372946/how-to-solve-this-error-compiling-js-failed-in-react-native",
      "title": "How to solve this error Compiling JS failed in React native"
    },
    {
      "tags": ["javascript", "reactjs", "react-native"],
      "is_answered": false,
      "view_count": 39,
      "up_vote_count": 0,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1685543714,
      "creation_date": 1685534844,
      "question_id": 76373324,
      "body_markdown": "i have this function to read barcode then check what&#39;s the code format,\r\n```javascript\r\n  componentDidMount() {\r\n    KeyEvent.onKeyDownListener((keyEvent: KeyEventProps) =&gt; {\r\n      if (keyEvent.keyCode === 61) {\r\n        // tab char end of code\r\n        const barcodeType = this.getBarcodeType(this.barcode);\r\n        if (barcodeType) {\r\n          this.props.barcodeSubject.next({barcode: this.barcode});\r\n        }\r\n        this.setState({barcode: this.barcode, barcodeType});\r\n        this.barcode = &#39;&#39;;\r\n        return;\r\n      }\r\n      this.barcode += keyEvent.pressedKey;\r\n    });\r\n  }\r\n\r\n getBarcodeType(input: string): Format | undefined {\r\n    const ean13Pattern = /^[0-9]{13}$/gm;\r\n    const ean8Pattern = /^[0-9]{8}$/;\r\n    const ean128Pattern = /^[(0-9A-Za-z)]+$/;\r\n    console.log(\r\n      &#39;***&#39;,\r\n      input,\r\n      typeof input,\r\n      input.length,\r\n      input.match(ean13Pattern),\r\n    );\r\n    if (ean13Pattern.test(input)) {\r\n      return &#39;EAN&#39;;\r\n    } else if (ean8Pattern.test(input)) {\r\n      return &#39;EAN&#39;;\r\n    } else if (ean128Pattern.test(input)) {\r\n      return &#39;CODE128&#39;;\r\n    }\r\n    return undefined;\r\n  }\r\n```\r\n\r\n\r\n\r\nthe problem is that the regex never match and when i do     console.log(      &#39;***&#39;,      input,      typeof input,      input.length,      input.match(ean13Pattern),    );\r\n\r\n\r\n LOG  *** 5449000214911 string 26 null \r\n\r\ni got 26 as length unstead of 13 can someone tell me why ?",
      "link": "https://stackoverflow.com/questions/76373324/react-native-string-length-return-bad-value",
      "title": "React native string.length return bad value"
    }
  ],
  "has_more": true,
  "quota_max": 300,
  "quota_remaining": 241
}
